# -*- coding: utf-8 -*-
"""Prioritizer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MeamFiGgUCpYYH9-HYRaHHq1dcsoFOEz
"""

import re
import codecs
import glob
import os
import csv
import sys
import numpy as np
import pickle
import tensorflow as tf
from tensorflow import keras

model = keras.models.load_model('data_rnn_best.h5')
model.summary()

with open('tokenizer.pickle', 'rb') as handle:
    tokenizer = pickle.load(handle)

path = "data.csv"

evaluated = []

csv.field_size_limit(sys.maxsize)


with open(path, 'r') as myFile:
    data = csv.DictReader(myFile)
    for row in data:
            text = row['text']
            label = row['label']

            text_seqs = tokenizer.texts_to_sequences([text])
            padded = tf.keras.preprocessing.sequence.pad_sequences(text_seqs, maxlen=8500)

            probability = model.predict(padded, batch_size=1, steps = 1)
            print(label)
            print("False positive probability: " + str(probability[0][1]))
            evaluated.append([label,probability[0][1]]) # Get the probability and assign it to a label

print(evaluated)

evaluated.sort(key=lambda tup: tup[1]) # Now we order false positives descendant order

f = open("prioritized.txt", "w")

for x in evaluated:
    f.write(x[0] + "\nProbability of being a False Positive: " + str(x[1]) +"\n")
    
f.close()